AWSTemplateFormatVersion: 2010-09-09
Parameters:
  BucketName:
    Type: String
    Default: padonconsulting-subdomain
  ApexDomainName:
    Type: String
    Default: padonconsulting.com
  SubDomain:
    Type: String
    Default: manual
  route53HostedZoneID:
    Type: String
    Default: Z01565642QZZWILXITGKZ

Resources:
  # creates a bucket named according to the BucketName Parameters with default web config
  s3hosting:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # creates a policy for the named bucket that allows all get requests
  openpolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketName
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join ['',['arn:aws:s3:::', !Ref BucketName, '/*']]
            Principal: '*'

  # creates a cert for <SubDomain>.<ApexDomainName>.com
  mycert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref ApexDomainName
      DomainValidationOptions:
      - DomainName: !Ref ApexDomainName
        HostedZoneId: !Ref route53HostedZoneID
      ValidationMethod: DNS
      SubjectAlternativeNames:
      - !Join ['.',[!Ref SubDomain, !Ref ApexDomainName]]

  webcdn:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CDN for S3-backed website
        DefaultRootObject: index.html
        Enabled: true
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          TargetOriginId: only-origin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: true
        Origins:
        - CustomOriginConfig:
            OriginProtocolPolicy: http-only
          DomainName: !Join ['.', [!Ref BucketName, 's3-website', !Ref 'AWS::Region', 'amazonaws.com']]
          Id: only-origin
        Aliases:
        - !Join ['.',[!Ref SubDomain, !Ref ApexDomainName]] #this has to match the certificate
        ViewerCertificate:
          AcmCertificateArn: !Ref mycert
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  dnsentries:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref route53HostedZoneID
      Name: !Join ['.',[!Ref SubDomain, !Ref ApexDomainName]]
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 #hard-coded for all cloud front distributions
        DNSName: !GetAtt webcdn.DomainName

# partially based on https://correctme.ifiamwrong.com/posts/cloudfrontcloudformation/